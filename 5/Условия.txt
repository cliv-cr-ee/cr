Фигли напряжённо таращились на неё.
– И ты не бу рвать-метать? – осторожно спросил Явор Заядло.
– Нет. Всё... правильно. Всё работает.
По пещере эхом разнёсся шелест – сотни маленьких человечков перевели дух.
– Видали? Она не спревратила меня в кукарачу! – гордо осклабился Туп Вулли. – Я грил с каргой, и она не заглазила меня косо-накося! Она мне лыбилась! – Он широко улыбнулся Тиффани.

Напишите приложение на flask для проверки, как работает магия улыбки.

В файле magic_smile.json записан словарь с ключами:

    filename (имя файла базы данных);
    trans (строка превращений через запятую и пробел);
    smile (наличие улыбки).

В БД находится таблица Witches с полями:
id, witch, who_turn_into, in_whom_turn_into, exist_smile
id, ведьма, кого превратила, в кого превратила, была ли улыбка (1 – 0)

При обращении по адресу http://127.0.0.1:5000/smile приложение должно возвращать список словарей с ключами:
witch, who, in whom
ведьма, кого превратила, в кого превратила

для превращений, результат (в кого превратила) которых есть в строке, а наличие улыбки зависит от smile: улыбка есть, если значение smile равно true, или нет, если false.

Список должен быть отсортирован в алфавитном порядке ведьм, для одной и той же ведьмы порядок из БД сохраняется.


Пример
Ввод

# Содержимое файла magic_smile.json
{
   "filename": "witch.db",
   "trans": "coin, pig, bucket, broom, frog, eagle",
   "smile": true
}

	
Вывод(данные на сервере)
[
    {
        "witch": "Egg",
        "who": "traveler",
        "in whom": "broom"
    },
    {
        "witch": "Tiffany",
        "who": "blacksmith",
        "in whom": "frog"
    },
    {
        "witch": "Vetrovosk",
        "who": "teacher",
        "in whom": "eagle"
    },
    {
        "witch": "Vetrovosk",
        "who": "robber",
        "in whom": "coin"
    }
]
